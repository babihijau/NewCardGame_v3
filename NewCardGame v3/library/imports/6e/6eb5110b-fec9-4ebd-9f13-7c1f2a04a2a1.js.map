{"version":3,"sources":["..\\..\\..\\..\\assets\\Script/assets\\Script\\DealScript.ts"],"names":[],"mappings":"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","file":"","sourceRoot":"..\\..\\..\\..\\assets\\Script","sourcesContent":["import DragCard from \"./DragCardScript\";\r\nimport Discarded from \"./DiscardedCardScript\";\r\nimport Hand from \"./HandCardScript\";\r\nimport Deck from \"./DeckCardScript\";\r\n\r\nconst { ccclass, property } = cc._decorator;\r\n\r\n@ccclass\r\nexport default class Deal extends cc.Component {\r\n\r\n    @property(cc.Button)\r\n    button: cc.Button = null;\r\n    @property\r\n    cardsToDeal: number = 0;\r\n    @property\r\n    spawnInterval: number = 0;\r\n    @property(cc.Node)\r\n    handLayout: cc.Node = null;\r\n\r\n    spawnCount: number = 0;\r\n\r\n    // public static dealingArray: cc.Node[] = [];\r\n    public static interactableButton: boolean = false;\r\n\r\n    onLoad(): void {\r\n        this.spawnCount = 0;\r\n    }\r\n\r\n    onDealCard(): void {\r\n        this.schedule(this.onDealCard, this.spawnInterval);\r\n\r\n        if (this.spawnCount >= this.cardsToDeal) {\r\n            this.clearRepeater();\r\n            return;\r\n        }\r\n\r\n        Deck.deckCards[Deck.deckCards.length - 1].runAction(cc.moveBy(0.2, cc.p(50, 50)));\r\n\r\n        Hand.handCards.push(Deck.deckCards[Deck.deckCards.length - 1]);\r\n\r\n        var maxPoint: number = this.handLayout.width / 2;\r\n        var cardsInHand: number = Hand.handCards.length;\r\n\r\n        var firstIndex: number = 0;\r\n\r\n        var spacing: number = 0;\r\n\r\n        firstIndex = (maxPoint / cardsInHand) - maxPoint;\r\n\r\n        spacing = (maxPoint / cardsInHand) + (maxPoint / cardsInHand);\r\n\r\n        if (spacing > 78) {\r\n            spacing = 78;\r\n            firstIndex = (78 / 2 - (cardsInHand * 78 / 2));\r\n        }\r\n\r\n        DragCard.currentHandSpacing = spacing;\r\n\r\n        for (var i: number = 0; i < cardsInHand; i++) {\r\n            Hand.handCards[i].stopAllActions();\r\n            Hand.handCards[i].runAction(cc.spawn(cc.rotateTo(0.1, 0), cc.moveTo(0.1, cc.p(firstIndex + (spacing * i), this.handLayout.y))));\r\n            Hand.handCards[i].setLocalZOrder(i);\r\n        }\r\n\r\n        Deck.deckCards.pop();\r\n        this.spawnCount++;\r\n    }\r\n\r\n    update(): void {\r\n        this.button.interactable = Deal.interactableButton;\r\n    }\r\n\r\n    clearRepeater(): void {\r\n        this.unschedule(this.onDealCard);\r\n    }\r\n}\r\n"]}